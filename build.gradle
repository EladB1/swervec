/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'io.freefair.lombok' version '8.0.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'com.piedpiper.swerve.Compiler'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    outputs.upToDateWhen { false }
    useJUnitPlatform()
}

sourceSets {
    integration {
        java.srcDir file(".src/integration/java/com/piedpiper/swerve/")
        compileClasspath += sourceSets.main.output
        runtimeClasspath += output + compileClasspath
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom runtimeOnly
}

tasks.register('integration', Test) {
    description = 'Runs integration tests only'
    group = 'verification'
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    useJUnitPlatform()
    outputs.upToDateWhen { false }
    mustRunAfter test
}

check.dependsOn integration

tasks.named('jar') {
    manifest {
        attributes['Main-Class'] = 'com.piedpiper.swerve.Compiler'
    }
}

startScripts {
    // create an executable script in distribution
    applicationName = 'swrvc'
}
